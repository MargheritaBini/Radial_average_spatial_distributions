import numpy
import pylab as plt
from scipy.optimize import curve_fit
import matplotlib.cm as cm

#the script takes as input file a .dx format file, converted to .txt, generated by the volmap tool of VMD

column1, column2, column3 = plt.loadtxt('mappa_carica.txt', unpack = True )

#coordinates of the grid lower corner

x_origin = -9.5
y_origin = -9.5
z_origin = -9.5

x_grid = []
y_grid = []
z_grid = []
density = []

#number of grid points in the x , y , and z directions

n_x = 201
n_y = 141
n_z = 141

for k in range (0,n_x, 1):
    for j in range (0, n_y, 1):
        for i in range (0,n_z, 1):
            z_grid.append (z_origin + i)
            x_grid.append(x_origin + k)
            y_grid.append (y_origin + j)

for i in range (0, len(column1), 1):
    density.append(column1[i])
    density.append(column2[i])
    density.append(column3[i])

#coordinates of the NP center

x_center = 90.9000
y_center = 60.400
z_center = 60.000

r = []

for i in range (0,len(x_grid),1):
    r.append (numpy.sqrt((x_grid[i]-x_center)**2 + (y_grid[i] - y_center)**2 + (z_grid[i] - z_center)**2 ))
    
#number of intervals in which the interval of the distance [0, r max] is divided


n interval = 7000

density_new = numpy.array_split(numpy.array(density), n_interval)
r_new = numpy.array_split(numpy.array(r), n_interval)


density_average= []
r_average = []

for i in range(0, len(density_new)):
    media_d = numpy.mean(density_new[i])
    density_average.append(media_d)
    media_r = numpy.mean(r_new[i])
    r_average.append(media_r)
    
    
    

